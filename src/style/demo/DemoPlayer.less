@import (css) url('https://fonts.googleapis.com/css?family=Open+Sans&display=swap');
@import (css) url('https://fonts.googleapis.com/css?family=Montserrat&display=swap');

@import './MockFeed.less';

// "Couldn't load ad" or "You have adblock enabled" warnings
.alert {
	max-width: 600px;
	margin: 0 auto;
	margin-bottom: 1em;
}

.demo-div-container {
	width: 100% !important;
}


// Common display class for various stacked-up elements in the simulated social display:
// fill the container and take position: absolute to stay out of flow.
.fill-abs {
	position: absolute;
	top: 0;
	left: 0;
	height: 100%;
	width: 100%;
}

.fill-bar {
	position: relative;
	width: 100%;
}

// Time to hold on each slide of the fake feed
@feed-delay: 1.2s;

/** Fade- or slide-in animations for fake-feed elements */
@keyframes fade-in {
	0% { opacity: 0; }
	100% { opacity: 1; }
}

@keyframes slide-in {
	0% { left: 100%; }
	100% { left: 0; }
}

.fake-feed {
	background-color: black;
	background-size: 100%;
	// Watch out! This is tuned to make elements show at the right size
	// when the phone frame is 80vh tall - see device-frame.less
	font-size: 1.75vh;

	// Slightly hacky but convenient - apply this class to animate-in elements
	// and they'll show in the same order they appear in the HTML.
	.animate-in-sequence {
		&:nth-child(2) { animation-delay: @feed-delay * 1; }
		&:nth-child(3) { animation-delay: @feed-delay * 2; }
		&:nth-child(4) { animation-delay: @feed-delay * 3; }
		&:nth-child(5) { animation-delay: @feed-delay * 4; }
		&:nth-child(6) { animation-delay: @feed-delay * 5; }
	}
	.fade-in, .slide-in {
		animation-timing-function: ease-in-out;
		animation-fill-mode: both;
		animation-iteration-count: 1;
		animation-duration: @feed-delay / 3; // TODO this is just a guesswork "should look okay" value
	}
	.slide-in {
		animation-name: slide-in;
	}
	.fade-in {
		animation-name: fade-in;
	}

	// The initial slide/screen of the "fake social" display - doesn't animate in.
	.social-splash {
		object-fit: cover;
	}

	// The mock video or banner image - ie the "this is what you'd click on Instagram/Snap/etc" part of the social demo
	// Show the whole image/video in the foreground - the blurred background copy will fill the rest of the screen.
	.mock-ad {
		object-fit: contain;
		object-position: center;
		// The blurred full-screen background copy
		&.bg {
			object-fit: cover;
			filter: blur(10px);
			// Object-fit: cover doesn't work on videos in Edge - this fixes it by allowing it to stretch wider than 100%.
			min-width: 100%;
			min-height: 100%;
			width: unset;
			height: unset;
			left: 50%;
			top: 50%;
			transform: translate(-50%, -50%);
		}
	}

	// Overlay components for the mock banner - eg the "BRAND and CHARITY" and "Swipe to donate" elements
	.mock-overlay {
		background-color: transparent;
		z-index: 2;
	}
}

.click-to-play {
	background-color: rgba(0, 0, 0, 0.5);
	color: white;
	font-weight: bold;
	display: flex;
	flex-direction: column;
	justify-content: center;
}

// Off-set ad to slide it in when mounted.
.social-ad {
	background-color: white;
	top: 100%;
	transition: top 0.4s ease-in;
	&.show {
		top: 0;
	}
}

.adBanner {
	background-color: transparent;
	height: 1px;
	width: 1px;
}